name: Translate Markdown on Main Push

on:
  push:
    branches:
      - main
    paths:
      - '**/*.md'  # Trigger only if Markdown files are changed
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  translate-markdown:
    runs-on: ubuntu-latest
    env:
      LANGUAGE: German
      BRANCH: de  # Target branch for translated files, adjust if needed

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Needed to access all branches and history

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openai requests tqdm tiktoken

      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

      - name: Identify Changed Markdown Files
        id: changed_files
        run: |
          # Compare the 'before' and 'after' commit SHAs provided by GitHub
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '\.md$' > changed_files.txt || true
      
          if [ -s changed_files.txt ]; then
            # Join the file paths with commas
            files=$(paste -sd "," changed_files.txt)
            echo "files=${files}" >> $GITHUB_ENV
            echo "Changed Markdown files: $files"
          else
            echo "No Markdown files changed."
            echo "files=" >> $GITHUB_ENV
          fi

      - name: Translate Changed Files
        if: env.files != ''
        run: |
          echo "Translating the following files: $files"
          IFS=',' read -r -a FILE_ARRAY <<< "$files"
          for file in "${FILE_ARRAY[@]}"; do
            # Define output file name, e.g., Test.md -> Test_de.md
            output_file="$(dirname "$file")/$(basename "$file" .md)_de.md"

            # Ensure the output directory exists
            mkdir -p "$(dirname "$output_file")"

            # Run the translation script
            python scripts/translate_markdown.py "$LANGUAGE" "$file" "$output_file" --model gpt-4
          done

      - name: Commit and Push Translated Files
        run: |
          # Check for any translated files to commit
          git add *_de.md

          # Commit if there are changes
          git commit -m "Add German translations for updated Markdown files" || echo "No changes to commit"

          # Push the changes back to the main branch
          git push origin de
